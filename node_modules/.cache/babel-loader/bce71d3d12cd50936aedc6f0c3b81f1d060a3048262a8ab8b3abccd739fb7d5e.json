{"ast":null,"code":"var _jsxFileName = \"/Users/namrita.tellapuram/Desktop/react-task/src/components/Kanban/Kanban.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport './Kanban.scss';\nimport logo from \"../../images/success.svg\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialData = {\n  tasks: {\n    \"task-1\": {\n      id: \"task-1\",\n      content: \"Task 1\",\n      image: logo\n    },\n    \"task-2\": {\n      id: \"task-2\",\n      content: \"Task 2\",\n      checklist: [{\n        text: \"Item 1\",\n        checked: false\n      }, {\n        text: \"Item 2\",\n        checked: false\n      }]\n    },\n    \"task-3\": {\n      id: \"task-3\",\n      content: \"Task 3\"\n    },\n    \"task-4\": {\n      id: \"task-4\",\n      content: \"Task 4\"\n    },\n    \"task-5\": {\n      id: \"task-5\",\n      content: \"Task 5\"\n    },\n    \"task-6\": {\n      id: \"task-6\",\n      content: \"Task 6\"\n    },\n    \"task-7\": {\n      id: \"task-7\",\n      content: \"Task 7\"\n    },\n    \"task-8\": {\n      id: \"task-8\",\n      content: \"Task 8\"\n    }\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"To Do\",\n      taskIds: [\"task-1\", \"task-2\"]\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"In Progress\",\n      taskIds: [\"task-3\"]\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Done\",\n      taskIds: [\"task-4\"]\n    }\n  },\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\", \"column-4\", \"column-5\", \"column-6\", \"column-7\", \"column-8\"]\n};\nconst Kanban = () => {\n  _s();\n  const [data, setData] = useState(initialData);\n  const onDragEnd = result => {\n    console.log(result);\n    const {\n      source,\n      destination,\n      draggableId\n    } = result;\n    if (!destination) return;\n    if (source.droppableId === destination.droppableId && source.index === destination.index) {\n      return;\n    }\n    const startColumn = data.columns[source.droppableId];\n    const endColumn = data.columns[destination.droppableId];\n    if (startColumn === endColumn) {\n      const newTaskIds = Array.from(startColumn.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n      const updatedColumn = {\n        ...startColumn,\n        taskIds: newTaskIds\n      };\n      setData({\n        ...data,\n        columns: {\n          ...data.columns,\n          [updatedColumn.id]: updatedColumn\n        }\n      });\n      return;\n    }\n    const startTaskIds = Array.from(startColumn.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const updatedStartColumn = {\n      ...startColumn,\n      taskIds: startTaskIds\n    };\n    const endTaskIds = Array.from(endColumn.taskIds);\n    endTaskIds.splice(destination.index, 0, draggableId);\n    const updatedEndColumn = {\n      ...endColumn,\n      taskIds: endTaskIds\n    };\n    setData({\n      ...data,\n      columns: {\n        ...data.columns,\n        [updatedStartColumn.id]: updatedStartColumn,\n        [updatedEndColumn.id]: updatedEndColumn\n      }\n    });\n  };\n  const handleTaskChange = (taskId, newContent, field = 'content') => {\n    console.log(data);\n    const updatedTasks = {\n      ...data.tasks\n    };\n    updatedTasks[taskId] = {\n      ...updatedTasks[taskId],\n      [field]: newContent\n    };\n    setData({\n      ...data,\n      tasks: updatedTasks\n    });\n    console.log(data);\n  };\n  const handleTaskUpdate = (taskId, updatedTask) => {\n    const updatedTasks = {\n      ...data.tasks\n    };\n    updatedTasks[taskId] = updatedTask;\n    setData({\n      ...data,\n      tasks: updatedTasks\n    });\n  };\n  const TaskWithChecklist = ({\n    task,\n    onChange\n  }) => {\n    const handleCheckboxChange = (itemIndex, checked) => {\n      const updatedTask = {\n        ...task\n      };\n      updatedTask.checklist[itemIndex].checked = checked;\n      onChange(task.id, updatedTask);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [task.id, task.checklist && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: task.checklist.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.checked,\n            onChange: e => handleCheckboxChange(index, e.target.checked)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this), item.text]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  };\n  const TaskWithImage = ({\n    task,\n    onChange\n  }) => {\n    const handleChange = e => {\n      onChange(task.id, e.target.value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [task.id, task.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: task.image,\n        alt: \"Task\",\n        style: {\n          width: \"30px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task.content,\n        onChange: e => onChange(task.id, e.target.value, 'image'),\n        placeholder: \"Image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this);\n  };\n  const EditableTask = ({\n    task,\n    onChange\n  }) => {\n    const handleChange = e => {\n      onChange(task.id, e.target.value);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: task.content,\n        onChange: handleChange,\n        placeholder: \"Edit task content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"full\",\n      children: data.columnOrder.map(columnId => {\n        const column = data.columns[columnId];\n        const tasks = column.taskIds.map(taskId => data.tasks[taskId]);\n        return /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: column.id,\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            ...provided.droppableProps,\n            ref: provided.innerRef,\n            style: {\n              border: \"1px solid lightgray\",\n              borderRadius: \"4px\",\n              width: \"250px\",\n              padding: \"8px\",\n              backgroundColor: \"#f7f7f7\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: column.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 21\n            }, this), tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: task.id,\n              index: index,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                style: {\n                  padding: \"8px\",\n                  margin: \"4px 0\",\n                  backgroundColor: \"white\",\n                  borderRadius: \"4px\",\n                  boxShadow: \"0 1px 3px rgba(0,0,0,0.2)\",\n                  ...provided.draggableProps.style\n                },\n                children: task.image ? /*#__PURE__*/_jsxDEV(TaskWithImage, {\n                  task: task,\n                  onChange: handleTaskChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 31\n                }, this) : task.checklist ? /*#__PURE__*/_jsxDEV(TaskWithChecklist, {\n                  task: task,\n                  onChange: handleTaskUpdate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [\"Task ID- \", task.id]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 29\n                  }, this)\n                }, void 0, false)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 27\n              }, this)\n            }, task.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 23\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }, this)\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n};\n_s(Kanban, \"hDGcfQHkZj5ZsEBk8saO8jx9VfY=\");\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","logo","jsxDEV","_jsxDEV","Fragment","_Fragment","initialData","tasks","id","content","image","checklist","text","checked","columns","title","taskIds","columnOrder","Kanban","_s","data","setData","onDragEnd","result","console","log","source","destination","draggableId","droppableId","index","startColumn","endColumn","newTaskIds","Array","from","splice","updatedColumn","startTaskIds","updatedStartColumn","endTaskIds","updatedEndColumn","handleTaskChange","taskId","newContent","field","updatedTasks","handleTaskUpdate","updatedTask","TaskWithChecklist","task","onChange","handleCheckboxChange","itemIndex","className","children","map","item","type","e","target","fileName","_jsxFileName","lineNumber","columnNumber","TaskWithImage","handleChange","value","src","alt","style","width","placeholder","EditableTask","columnId","column","provided","droppableProps","ref","innerRef","border","borderRadius","padding","backgroundColor","textAlign","draggableProps","dragHandleProps","margin","boxShadow","_c","$RefreshReg$"],"sources":["/Users/namrita.tellapuram/Desktop/react-task/src/components/Kanban/Kanban.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport './Kanban.scss'\nimport logo from \"../../images/success.svg\";\n\nconst initialData = {\n  tasks: {\n    \"task-1\": { id: \"task-1\", content: \"Task 1\", image: logo },\n    \"task-2\": { id: \"task-2\", content: \"Task 2\", checklist: [{ text: \"Item 1\", checked: false }, { text: \"Item 2\", checked: false }] },\n    \"task-3\": { id: \"task-3\", content: \"Task 3\" },\n    \"task-4\": { id: \"task-4\", content: \"Task 4\" },\n    \"task-5\": { id: \"task-5\", content: \"Task 5\" },\n    \"task-6\": { id: \"task-6\", content: \"Task 6\" },\n    \"task-7\": { id: \"task-7\", content: \"Task 7\" },\n    \"task-8\": { id: \"task-8\", content: \"Task 8\" },\n  },\n  columns: {\n    \"column-1\": {\n      id: \"column-1\",\n      title: \"To Do\",\n      taskIds: [\"task-1\", \"task-2\"],\n    },\n    \"column-2\": {\n      id: \"column-2\",\n      title: \"In Progress\",\n      taskIds: [\"task-3\"],\n    },\n    \"column-3\": {\n      id: \"column-3\",\n      title: \"Done\",\n      taskIds: [\"task-4\"],\n    },\n  },\n  columnOrder: [\"column-1\", \"column-2\", \"column-3\",\n  \"column-4\", \"column-5\", \"column-6\",\n  \"column-7\", \"column-8\"\n],\n};\n\nconst Kanban = () => {\n  const [data, setData] = useState(initialData);\n\n  const onDragEnd = (result) => {\n    console.log(result)\n    const { source, destination, draggableId } = result;\n\n    if (!destination) return;\n\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n\n    const startColumn = data.columns[source.droppableId];\n    const endColumn = data.columns[destination.droppableId];\n\n   \n    if (startColumn === endColumn) {\n      const newTaskIds = Array.from(startColumn.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const updatedColumn = {\n        ...startColumn,\n        taskIds: newTaskIds,\n      };\n\n      setData({\n        ...data,\n        columns: {\n          ...data.columns,\n          [updatedColumn.id]: updatedColumn,\n        },\n      });\n\n      return;\n    }\n\n   \n    const startTaskIds = Array.from(startColumn.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const updatedStartColumn = {\n      ...startColumn,\n      taskIds: startTaskIds,\n    };\n\n    const endTaskIds = Array.from(endColumn.taskIds);\n    endTaskIds.splice(destination.index, 0, draggableId);\n    const updatedEndColumn = {\n      ...endColumn,\n      taskIds: endTaskIds,\n    };\n\n    setData({\n      ...data,\n      columns: {\n        ...data.columns,\n        [updatedStartColumn.id]: updatedStartColumn,\n        [updatedEndColumn.id]: updatedEndColumn,\n      },\n    });\n  };\n\n  const handleTaskChange = (taskId, newContent, field = 'content') => {\n    console.log(data)\n    const updatedTasks = { ...data.tasks };\n    updatedTasks[taskId] = { ...updatedTasks[taskId], [field]: newContent };\n    setData({\n      ...data,\n      tasks: updatedTasks,\n    });\n    console.log(data)\n  };\n\n  const handleTaskUpdate = (taskId, updatedTask) => {\n    const updatedTasks = { ...data.tasks };\n    updatedTasks[taskId] = updatedTask;\n    setData({\n      ...data,\n      tasks: updatedTasks,\n    });\n  };\n\n  const TaskWithChecklist = ({ task, onChange }) => {\n    const handleCheckboxChange = (itemIndex, checked) => {\n      const updatedTask = { ...task };\n      updatedTask.checklist[itemIndex].checked = checked;\n      onChange(task.id, updatedTask);\n    };\n\n    return (\n      <div className=\"task\">\n        {task.id}\n        {task.checklist && (\n          <ul>\n            {task.checklist.map((item, index) => (\n              <li key={index}>\n                <input\n                  type=\"checkbox\"\n                  checked={item.checked}\n                  onChange={(e) => handleCheckboxChange(index, e.target.checked)}\n                />\n                {item.text}\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  };\n\n  const TaskWithImage = ({ task, onChange }) => {\n    const handleChange = (e) => {\n      onChange(task.id, e.target.value);\n    };\n\n    return (\n      <div className=\"task\">\n        {task.id}\n        {/* <textarea\n          value={task.content}\n          onChange={handleChange}\n          placeholder=\"Edit task content\"\n        /> */}\n        {task.image && <img src={task.image} alt=\"Task\" style={{width:\"30px\"}}/>}\n        <input\n          type=\"text\"\n          value={task.content}\n          onChange={(e) => onChange(task.id, e.target.value, 'image')}\n          placeholder=\"Image URL\"\n        />\n      </div>\n    );\n  };\n\n  const EditableTask = ({ task, onChange }) => {\n    const handleChange = (e) => {\n      onChange(task.id, e.target.value);\n    };\n\n    return (\n      <div className=\"task\">\n        <textarea\n          value={task.content}\n          onChange={handleChange}\n          placeholder=\"Edit task content\"\n        />\n      </div>\n    );\n  };\n\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <div className=\"full\">\n        {\n          data.columnOrder.map((columnId) => {\n            const column = data.columns[columnId];\n            const tasks = column.taskIds.map((taskId) => data.tasks[taskId]);\n            return (\n              <Droppable droppableId={column.id} key={column.id}>\n                {(provided) => (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={{\n                      border: \"1px solid lightgray\",\n                      borderRadius: \"4px\",\n                      width: \"250px\",\n                      padding: \"8px\",\n                      backgroundColor: \"#f7f7f7\",\n                    }}\n                  >\n                    <h3 style={{ textAlign: \"center\" }}>{column.title}</h3>\n                    {tasks.map((task, index) => (\n                      <Draggable\n                        draggableId={task.id}\n                        index={index}\n                        key={task.id}\n                      >\n                        {(provided) => (\n                          <div\n                            ref={provided.innerRef}\n                            {...provided.draggableProps}\n                            {...provided.dragHandleProps}\n                            style={{\n                              padding: \"8px\",\n                              margin: \"4px 0\",\n                              backgroundColor: \"white\",\n                              borderRadius: \"4px\",\n                              boxShadow: \"0 1px 3px rgba(0,0,0,0.2)\",\n                              ...provided.draggableProps.style,\n                            }}\n                          >\n                \n                            {task.image ? (\n                              <TaskWithImage task={task} onChange={handleTaskChange} />\n                            ) : task.checklist ? (\n                              <TaskWithChecklist task={task} onChange={handleTaskUpdate} />\n                            ) : (<>\n\n                            <div>Task ID- {task.id}</div>\n                            </>)}\n                          </div>\n                        )}\n                      </Draggable>\n                    ))}\n                    {provided.placeholder}\n                  </div>\n                )}\n              </Droppable>\n            );\n          })\n        }\n      </div>\n    </DragDropContext>\n  );\n};\n\n\nexport default Kanban;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}